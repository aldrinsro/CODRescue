# Generated by Django 5.1.7 on 2025-08-08 15:38

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('parametre', '0005_alter_operateur_type_operateur'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaginationPreset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nom du profil prédéfini', max_length=100, verbose_name='Nom du preset')),
                ('preset_type', models.CharField(choices=[('performance', 'Performance'), ('ux_advanced', 'UX Avancée'), ('classic', 'Classique'), ('mobile_first', 'Mobile-First'), ('administration', 'Administration'), ('custom', 'Personnalisé')], default='custom', help_text='Catégorie de ce preset', max_length=20, verbose_name='Type de preset')),
                ('description', models.TextField(blank=True, help_text='Description détaillée de ce preset', verbose_name='Description')),
                ('items_per_page', models.IntegerField(default=25, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(1000)], verbose_name='Éléments par page')),
                ('pagination_style', models.CharField(choices=[('simple', 'Simple'), ('numbered', 'Numérotée'), ('arrows', 'Avec flèches'), ('complete', 'Complète'), ('infinite', 'Infinite scroll')], default='numbered', max_length=20, verbose_name='Style de pagination')),
                ('search_debounce', models.IntegerField(default=300, validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(2000)], verbose_name='Debounce de recherche (ms)')),
                ('cache_duration', models.IntegerField(default=300, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3600)], verbose_name='Durée de cache (secondes)')),
                ('dynamic_search', models.BooleanField(default=True, verbose_name='Recherche dynamique')),
                ('static_filters', models.BooleanField(default=False, verbose_name='Filtres statiques')),
                ('custom_sorting', models.BooleanField(default=False, verbose_name='Tri personnalisé')),
                ('preload_adjacent', models.BooleanField(default=True, verbose_name='Précharger les pages adjacentes')),
                ('is_public', models.BooleanField(default=True, help_text='Rendre ce preset disponible pour tous les utilisateurs', verbose_name='Preset public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_pagination_presets', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Preset de pagination',
                'verbose_name_plural': 'Presets de pagination',
                'ordering': ['preset_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserPaginationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_items_per_page', models.IntegerField(default=25, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(1000)], verbose_name='Éléments par page par défaut')),
                ('preferred_pagination_style', models.CharField(choices=[('simple', 'Simple'), ('numbered', 'Numérotée'), ('arrows', 'Avec flèches'), ('complete', 'Complète'), ('infinite', 'Infinite scroll')], default='numbered', max_length=20, verbose_name='Style de pagination préféré')),
                ('preferred_search_debounce', models.IntegerField(default=300, validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(2000)], verbose_name='Debounce de recherche préféré (ms)')),
                ('module_preferences', models.JSONField(blank=True, default=dict, help_text='Préférences spécifiques par module (format JSON)', verbose_name='Préférences par module')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pagination_preferences', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Préférence de pagination utilisateur',
                'verbose_name_plural': 'Préférences de pagination utilisateur',
            },
        ),
        migrations.CreateModel(
            name='PaginationConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nom descriptif de cette configuration', max_length=100, verbose_name='Nom de la configuration')),
                ('module', models.CharField(choices=[('client', 'Clients'), ('commande', 'Commandes'), ('article', 'Articles'), ('operateur', 'Opérateurs'), ('livraison', 'Livraisons'), ('preparation', 'Préparation'), ('synchronisation', 'Synchronisation')], help_text="Module auquel cette configuration s'applique", max_length=50, verbose_name='Module')),
                ('items_per_page', models.IntegerField(default=25, help_text="Nombre d'éléments affichés par page", validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(1000)], verbose_name='Éléments par page')),
                ('pagination_style', models.CharField(choices=[('simple', 'Simple'), ('numbered', 'Numérotée'), ('arrows', 'Avec flèches'), ('complete', 'Complète'), ('infinite', 'Infinite scroll')], default='numbered', help_text="Type d'affichage de la pagination", max_length=20, verbose_name='Style de pagination')),
                ('pagination_position', models.CharField(choices=[('top', 'Haut'), ('bottom', 'Bas'), ('both', 'Haut et Bas')], default='bottom', help_text='Où afficher les contrôles de pagination', max_length=10, verbose_name='Position de la pagination')),
                ('search_debounce', models.IntegerField(default=300, help_text='Délai avant déclenchement de la recherche (millisecondes)', validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(2000)], verbose_name='Debounce de recherche (ms)')),
                ('cache_duration', models.IntegerField(default=300, help_text='Durée de mise en cache des résultats AJAX', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3600)], verbose_name='Durée de cache (secondes)')),
                ('preload_adjacent', models.BooleanField(default=True, help_text='Charger automatiquement les pages précédente/suivante', verbose_name='Précharger les pages adjacentes')),
                ('dynamic_search', models.BooleanField(default=True, help_text='Activer la recherche en temps réel', verbose_name='Recherche dynamique')),
                ('static_filters', models.BooleanField(default=False, help_text='Afficher les filtres sous forme de formulaires', verbose_name='Filtres statiques')),
                ('custom_sorting', models.BooleanField(default=False, help_text='Permettre le tri personnalisé des colonnes', verbose_name='Tri personnalisé')),
                ('mobile_items_per_page', models.IntegerField(default=10, help_text="Nombre d'éléments par page sur mobile", validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(100)], verbose_name='Éléments par page (Mobile)')),
                ('tablet_items_per_page', models.IntegerField(default=20, help_text="Nombre d'éléments par page sur tablet", validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(200)], verbose_name='Éléments par page (Tablet)')),
                ('is_active', models.BooleanField(default=True, help_text='Activer cette configuration', verbose_name='Configuration active')),
                ('is_default', models.BooleanField(default=False, help_text='Utiliser comme configuration par défaut pour ce module', verbose_name='Configuration par défaut')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_pagination_configs', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Configuration de pagination',
                'verbose_name_plural': 'Configurations de pagination',
                'ordering': ['module', 'name'],
                'unique_together': {('module', 'name')},
            },
        ),
    ]
