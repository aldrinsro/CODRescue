# Generated by Django 4.2.25 on 2025-10-21 17:57

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('parametre', '0001_initial'),
        ('article', '0001_initial'),
        ('client', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_cmd', models.CharField(max_length=50, unique=True)),
                ('id_yz', models.PositiveIntegerField(blank=True, null=True, unique=True)),
                ('origine', models.CharField(choices=[('OC', 'Opérateur Confirmation'), ('ADMIN', 'Administrateur'), ('SYNC', 'Synchronisation')], default='SYNC', max_length=10)),
                ('date_cmd', models.DateField(default=django.utils.timezone.now)),
                ('total_cmd', models.FloatField()),
                ('adresse', models.TextField()),
                ('motif_annulation', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('last_sync_date', models.DateTimeField(blank=True, null=True, verbose_name='Date de dernière synchronisation')),
                ('ville_init', models.CharField(blank=True, max_length=100, null=True)),
                ('produit_init', models.TextField(blank=True, null=True)),
                ('source', models.CharField(blank=True, choices=[('Appel', 'Appel'), ('Whatsapp ', 'Whatsapp '), ('SMS', 'SMS'), ('Email', 'Email'), ('Facebook', 'Facebook'), ('Youcan', 'Youcan'), ('Shopify', 'Shopify')], max_length=100, null=True)),
                ('compteur', models.IntegerField(default=0, verbose_name="Compteur d'utilisation")),
                ('payement', models.CharField(choices=[('Non payé', 'Non payé'), ('Payé', 'Payé'), ('Remboursée', 'Remboursée')], default='Non payé', verbose_name='Payement')),
                ('frais_livraison', models.BooleanField(default=True, verbose_name='Frais de livraison')),
                ('Date_livraison', models.DateTimeField(blank=True, null=True, verbose_name='Date de livraison')),
                ('Date_paiement', models.DateTimeField(blank=True, null=True, verbose_name='Date de paiement')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commandes', to='client.client')),
            ],
            options={
                'verbose_name': 'Commande',
                'verbose_name_plural': 'Commandes',
                'ordering': ['-date_cmd', '-date_creation', 'id_yz'],
            },
        ),
        migrations.CreateModel(
            name='EnumEtatCmd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=100, unique=True)),
                ('ordre', models.IntegerField(default=0)),
                ('couleur', models.CharField(default='#6B7280', max_length=7)),
            ],
            options={
                'verbose_name': "Définition d'état de commande(EnumEtatCmd)",
                'verbose_name_plural': "Définitions d'états de commande(EnumEtatCmd)",
                'ordering': ['ordre', 'libelle'],
            },
        ),
        migrations.CreateModel(
            name='EtiquetteTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du template')),
                ('width', models.FloatField(default=180, verbose_name='Largeur (mm)')),
                ('height', models.FloatField(default=260, verbose_name='Hauteur (mm)')),
                ('margin_top', models.FloatField(default=10, verbose_name='Marge haute (mm)')),
                ('margin_bottom', models.FloatField(default=10, verbose_name='Marge basse (mm)')),
                ('margin_left', models.FloatField(default=10, verbose_name='Marge gauche (mm)')),
                ('margin_right', models.FloatField(default=10, verbose_name='Marge droite (mm)')),
                ('font_family', models.CharField(default='Helvetica', max_length=50, verbose_name='Police')),
                ('font_size_title', models.IntegerField(default=16, verbose_name='Taille police titre')),
                ('font_size_text', models.IntegerField(default=12, verbose_name='Taille police texte')),
                ('font_size_barcode', models.IntegerField(default=14, verbose_name='Taille police code-barres')),
                ('color_header', models.CharField(default='#2c3e50', max_length=7, verbose_name='Couleur en-tête')),
                ('color_footer', models.CharField(default='#2c3e50', max_length=7, verbose_name='Couleur pied')),
                ('color_text', models.CharField(default='#333333', max_length=7, verbose_name='Couleur texte')),
                ('barcode_width', models.FloatField(default=4, verbose_name='Largeur barres (mm)')),
                ('barcode_height', models.FloatField(default=80, verbose_name='Hauteur barres (mm)')),
                ('barcode_format', models.CharField(default='CODE128B', max_length=20, verbose_name='Format code-barres')),
                ('qr_size', models.IntegerField(default=300, verbose_name='Taille QR code (px)')),
                ('show_header', models.BooleanField(default=True, verbose_name='Afficher en-tête')),
                ('show_footer', models.BooleanField(default=True, verbose_name='Afficher pied')),
                ('show_barcode', models.BooleanField(default=True, verbose_name='Afficher code-barres')),
                ('show_qr', models.BooleanField(default=False, verbose_name='Afficher QR code')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
            ],
            options={
                'verbose_name': "Template d'étiquette",
                'verbose_name_plural': "Templates d'étiquettes",
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Panier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.IntegerField()),
                ('sous_total', models.FloatField()),
                ('remise_appliquer', models.BooleanField(default=False)),
                ('type_remise_appliquee', models.CharField(blank=True, choices=[('', 'Aucune remise'), ('remise_1', 'Prix remise 1'), ('remise_2', 'Prix remise 2'), ('remise_3', 'Prix remise 3'), ('remise_4', 'Prix remise 4')], default='', max_length=20)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paniers', to='article.article')),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paniers', to='commande.commande')),
                ('variante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paniers', to='article.variantearticle')),
            ],
            options={
                'verbose_name': 'Panier',
                'verbose_name_plural': 'Paniers',
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_operation', models.CharField(choices=[('APPEL', 'Appel '), ('Appel Whatsapp', 'Appel Whatsapp'), ('Message Whatsapp', 'Appel Whatsapp '), ('Vocal Whatsapp', 'Vocal Whatsapp '), ('ENVOI_SMS', 'Envoi de SMS')], max_length=30)),
                ('date_operation', models.DateTimeField(default=django.utils.timezone.now)),
                ('conclusion', models.TextField()),
                ('commentaire', models.TextField(blank=True, choices=[('Appel 1', 'Appel 1'), ('Appel 2', 'Appel 2'), ('Appel 3', 'Appel 3'), ('Appel 4', 'Appel 4'), ('Appel 5', 'Appel 5'), ('Appel 6', 'Appel 6'), ('Confirmée', 'Confirmée'), ('Confirmée & Echangée', 'Confirmée & Echangée'), ('Echangée', 'Echangée'), ('Abonnement', 'Abonnement'), ('Offre', 'Offre'), ('numero errone', 'numéro erroné'), ('boite vocalee', 'boite vocalee'), ('indisponible', 'indisponible')], null=True)),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operations', to='commande.commande')),
                ('operateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operations', to='parametre.operateur')),
            ],
            options={
                'verbose_name': 'Opération',
                'verbose_name_plural': 'Opérations',
                'ordering': ['-date_operation'],
            },
        ),
        migrations.CreateModel(
            name='EtatCommande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_fin', models.DateTimeField(blank=True, null=True)),
                ('commentaire', models.TextField(blank=True, null=True)),
                ('date_fin_delayed', models.DateTimeField(blank=True, null=True, verbose_name='Date reporte de confirmation décalée')),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etats', to='commande.commande')),
                ('enum_etat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commande.enumetatcmd')),
                ('operateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='etats_modifies', to='parametre.operateur')),
            ],
            options={
                'verbose_name': 'État de commande(Suivi de commande)',
                'verbose_name_plural': 'États de commande(Suivi de commande)',
                'ordering': ['-date_debut'],
            },
        ),
        migrations.CreateModel(
            name='EtatArticleRenvoye',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.PositiveIntegerField(default=1)),
                ('date_maj', models.DateTimeField(auto_now=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='article.article')),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etats_articles_renvoyes', to='commande.commande')),
                ('etat', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='commande.enumetatcmd')),
            ],
            options={
                'verbose_name': "État d'article renvoyé",
                'verbose_name_plural': "États d'articles renvoyés",
            },
        ),
        migrations.CreateModel(
            name='Envoi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_envoi', models.DateField(default=django.utils.timezone.now, verbose_name="Date d'envoi")),
                ('date_livraison_prevue', models.DateField(verbose_name='Date de livraison prévue')),
                ('date_livraison_effective', models.DateField(blank=True, null=True, verbose_name='Date de clôture')),
                ('status', models.BooleanField(default=True, verbose_name='En cours')),
                ('numero_envoi', models.CharField(blank=True, max_length=50, verbose_name="Numéro d'envoi")),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('nb_commandes', models.PositiveIntegerField(default=0, verbose_name='Nombre de commandes')),
                ('commande', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='envois', to='commande.commande')),
                ('operateur_creation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='envois_crees', to='parametre.operateur', verbose_name='Créé par')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='envois', to='parametre.region')),
            ],
            options={
                'verbose_name': 'Envoi',
                'verbose_name_plural': 'Envois',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.AddField(
            model_name='commande',
            name='envoi',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commandes_associees', to='commande.envoi'),
        ),
        migrations.AddField(
            model_name='commande',
            name='ville',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='commandes', to='parametre.ville'),
        ),
        migrations.CreateModel(
            name='ArticleRetourne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_retournee', models.PositiveIntegerField(help_text='Quantité retournée de cet article/variante')),
                ('prix_unitaire_origine', models.DecimalField(decimal_places=2, help_text="Prix unitaire de l'article au moment de la livraison partielle", max_digits=10)),
                ('raison_retour', models.TextField(blank=True, help_text='Raison du retour (optionnel)', max_length=500)),
                ('date_retour', models.DateTimeField(auto_now_add=True, help_text='Date et heure du retour')),
                ('statut_retour', models.CharField(choices=[('en_attente', 'En attente de traitement'), ('reintegre_stock', 'Réintégré en stock'), ('renvoye_preparation', 'Renvoyé en préparation'), ('defectueux', 'Défectueux - à écarter'), ('traite', 'Traité')], default='en_attente', help_text='Statut du traitement du retour', max_length=50)),
                ('date_traitement', models.DateTimeField(blank=True, help_text='Date de traitement du retour', null=True)),
                ('commentaire_traitement', models.TextField(blank=True, help_text='Commentaire sur le traitement du retour', max_length=500)),
                ('article', models.ForeignKey(help_text='Article retourné', on_delete=django.db.models.deletion.CASCADE, to='article.article')),
                ('commande', models.ForeignKey(help_text="Commande d'origine de l'article retourné", on_delete=django.db.models.deletion.CASCADE, related_name='articles_retournes', to='commande.commande')),
                ('operateur_retour', models.ForeignKey(blank=True, help_text='Opérateur qui a effectué le retour', null=True, on_delete=django.db.models.deletion.SET_NULL, to='parametre.operateur')),
                ('operateur_traitement', models.ForeignKey(blank=True, help_text='Opérateur qui a traité le retour', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='retours_traites', to='parametre.operateur')),
                ('variante', models.ForeignKey(blank=True, help_text="Variante spécifique de l'article retourné", null=True, on_delete=django.db.models.deletion.CASCADE, to='article.variantearticle')),
            ],
            options={
                'verbose_name': 'Article Retourné',
                'verbose_name_plural': 'Articles Retournés',
                'ordering': ['-date_retour'],
            },
        ),
        migrations.AddConstraint(
            model_name='panier',
            constraint=models.CheckConstraint(check=models.Q(('quantite__gt', 0)), name='quantite_positive'),
        ),
        migrations.AddConstraint(
            model_name='panier',
            constraint=models.CheckConstraint(check=models.Q(('sous_total__gte', 0)), name='sous_total_positif'),
        ),
        migrations.AlterUniqueTogether(
            name='panier',
            unique_together={('commande', 'article', 'variante')},
        ),
        migrations.AddConstraint(
            model_name='etatcommande',
            constraint=models.CheckConstraint(check=models.Q(('date_fin__isnull', True), ('date_debut__lte', models.F('date_fin')), _connector='OR'), name='date_debut_avant_date_fin'),
        ),
        migrations.AlterUniqueTogether(
            name='etatarticlerenvoye',
            unique_together={('commande', 'article')},
        ),
        migrations.AddIndex(
            model_name='envoi',
            index=models.Index(fields=['status', 'date_creation'], name='commande_en_status_5a803b_idx'),
        ),
        migrations.AddIndex(
            model_name='envoi',
            index=models.Index(fields=['region', 'date_envoi'], name='commande_en_region__0615d1_idx'),
        ),
        migrations.AddConstraint(
            model_name='commande',
            constraint=models.CheckConstraint(check=models.Q(('total_cmd__gte', 0)), name='total_cmd_positif'),
        ),
        migrations.AddIndex(
            model_name='articleretourne',
            index=models.Index(fields=['commande', 'statut_retour'], name='commande_ar_command_5eb375_idx'),
        ),
        migrations.AddIndex(
            model_name='articleretourne',
            index=models.Index(fields=['article', 'statut_retour'], name='commande_ar_article_afd401_idx'),
        ),
        migrations.AddIndex(
            model_name='articleretourne',
            index=models.Index(fields=['date_retour'], name='commande_ar_date_re_491d3d_idx'),
        ),
    ]
